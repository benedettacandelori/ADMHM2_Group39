# -*- coding: utf-8 -*-
"""functions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mqft1S81KyzVYQaNe1K7cIt0HexPUcg0
"""


def count_reviews(time_intervals):
    review_intervals = [] # empty array used to store the number of interview in each time-interval
    # time_intervals are a list of tuples (with the extremes of the given interval)
    for interval in time_intervals:
        initial_time, final_time = interval # set the extremes of interval
        # count the input timestamps in each range
        count = len(dataset[timestamps.apply(lambda x : x > initial_time and x < final_time)])
        review_intervals.append(count) # store the number of reviews in the array
    
    labels = [(lambda x: str(x))(x) for x in time_intervals] # labels for the figure
    plt.figure(figsize=(17,11))
    my_circle = plt.Circle( (0,0), 0.7, color='white')
    plt.pie(review_intervals, labels=labels,startangle = 0,autopct='%1.2f%%', colors=['gold','gold','deeppink','deeppink','darkorange','steelblue','steelblue'],textprops={'size': 'x-large'},wedgeprops = { 'linewidth' : 7, 'edgecolor' : 'white' })
    p = plt.gcf()
    p.gca().add_artist(my_circle)
    # set the legend
    morn = mpatches.Patch(color='gold', label='Morning',alpha=.6)
    after = mpatches.Patch(color='deeppink', label='Afternoon',alpha=.6)
    even = mpatches.Patch(color='darkorange', label='Evening',alpha=.6)
    nig = mpatches.Patch(color='steelblue', label='Night',alpha=.6)
    plt.legend(loc=(1,1),handles=[morn,after,even,nig])
    plt.show()
    return

def review_language(data,languages):
    return data[data.language.isin(languages)]